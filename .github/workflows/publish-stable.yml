name: publish-stable

on:
  push:
    branches: [ stable ]
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
      # id-token: write   # <-- uncomment if you later adopt OIDC code-signing
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_GHA_ENABLED: 'true'
      SCCACHE_CACHE_SIZE: '2G'
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-22.04
            args: ''
          - platform: windows-latest
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          lfs: true
          fetch-depth: 0

      # ---------- Frontend (Node + Vite) ----------
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json

      - name: Install frontend deps
        working-directory: Frontend
        run: npm ci

      - name: Build frontend
        working-directory: Frontend
        run: npm run build

      # ---------- Rust toolchain & deps ----------
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Install Linux build deps (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y libappindicator3-dev librsvg2-dev patchelf
          # Prefer WebKitGTK 4.1; fall back to 4.0 if 4.1 isn't available
          sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev

      # ---------- Cargo caching ----------
      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      # ---------- Build & publish with Tauri action ----------
      - name: Build and create GitHub Release (draft)
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # We already built the Frontend; tell Backend/Tauri to skip any beforeBuildCommand
          FRONTEND_SKIP_BUILD: '1'
        with:
          # Point the action at your Tauri project (Backend/)
          projectPath: Backend
          # If your Tauri config expects distDir to already exist, ensure Frontend build outputs there
          # Alternatively, if Backend/tauri.conf.json points to "../Frontend/dist", no change needed.

          tagName: openvcs-v__VERSION__
          releaseName: 'OpenVCS v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
          includeDebug: false   # default; set true if you want debug archives too
          # bundles: ''           # e.g. 'deb,appimage,msi,nsis' if you want to restrict output
