name: Nightly
run-name: "OpenVCS Nightly • Run #${{ github.run_number }} • Dev @ ${{ github.sha }}"

on:
  schedule:
    # 01:30 UTC daily (02:30 in London during BST)
    - cron: '30 1 * * *'
  workflow_dispatch:

# Default to least privilege; override per-job as needed
permissions:
  contents: read

jobs:
  check-changes:
    name: Check if Dev changed since last nightly
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    outputs:
      changed: ${{ steps.diff.outputs.changed }}
      since_sha: ${{ steps.diff.outputs.since_sha }}
      ahead_count: ${{ steps.diff.outputs.ahead_count }}
    steps:
      - name: Checkout Dev
        uses: actions/checkout@v5
        with:
          ref: Dev
          fetch-depth: 0   # we need history and tags
          lfs: false

      - name: Fetch tags
        run: git fetch --tags --force

      - name: Determine diff vs openvcs-nightly
        id: diff
        shell: bash
        run: |
          set -euo pipefail
          TAG="openvcs-nightly"

          # If the tag doesn’t exist, force a build.
          if ! git rev-parse -q --verify "refs/tags/$TAG" >/dev/null; then
            echo "changed=true"       >> "$GITHUB_OUTPUT"
            echo "since_sha=(none)"   >> "$GITHUB_OUTPUT"
            echo "ahead_count=INIT"   >> "$GITHUB_OUTPUT"
            exit 0
          fi

          SINCE_SHA="$(git rev-list -n 1 "$TAG")"
          echo "since_sha=$SINCE_SHA" >> "$GITHUB_OUTPUT"

          # Limit the diff to code paths only (adjust to your repo layout).
          # Remove paths if you truly want any change to trigger a nightly.
          if git diff --quiet "$TAG"..HEAD -- Frontend Backend; then
            echo "changed=false"      >> "$GITHUB_OUTPUT"
            echo "ahead_count=0"      >> "$GITHUB_OUTPUT"
          else
            AHEAD="$(git rev-list --count "$TAG"..HEAD -- Frontend Backend || echo 1)"
            echo "changed=true"       >> "$GITHUB_OUTPUT"
            echo "ahead_count=$AHEAD" >> "$GITHUB_OUTPUT"
          fi

  nightly:
    name: Build & publish Nightly (only if changed)
    needs: check-changes
    if: needs.check-changes.outputs.changed == 'true'
    permissions:
      contents: write      # create/delete release + tag
      actions: write       # use GitHub Actions cache (rust-cache / sccache)
    env:
      RUSTC_WRAPPER: sccache
      SCCACHE_GHA_ENABLED: 'true'
      SCCACHE_CACHE_SIZE: '2G'
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-22.04
            args: ''
          - platform: windows-latest
            args: ''
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout Dev
        uses: actions/checkout@v5
        with:
          ref: Dev
          fetch-depth: 0
          lfs: true

      - name: Compute metadata (date, short SHA, compare, changelog)
        id: meta
        uses: actions/github-script@v8
        with:
          script: |
            const short = context.sha.substring(0, 7);
            const date = new Date().toISOString().slice(0, 10); // UTC date
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const basehead = 'openvcs-nightly...Dev';
            let compare_url = `${context.serverUrl}/${owner}/${repo}/compare/${basehead}`;
            let commit_url = `${context.serverUrl}/${owner}/${repo}/commit/${context.sha}`;
            let changelog = '';

            try {
              const res = await github.rest.repos.compareCommitsWithBasehead({ owner, repo, basehead });
              const commits = res?.data?.commits ?? [];
              if (commits.length === 0) {
                changelog = `No changes detected.`;
              } else {
                // Include all commits since last nightly tag -> Dev
                const items = commits.map(c => {
                  const sha = (c.sha || '').substring(0, 7);
                  const msg = (c.commit?.message || '').split('\n')[0];
                  const author = c.author?.login || c.commit?.author?.name || 'unknown';
                  return `- ${sha} ${msg} (@${author})`;
                });
                changelog = items.join('\n');
              }
            } catch (e) {
              // Likely first nightly (tag missing) or compare failed for another reason
              changelog = 'First nightly or previous tag unavailable; showing recent commits at Dev.';
              compare_url = `${context.serverUrl}/${owner}/${repo}/tree/Dev`;
            }

            core.setOutput('short_sha', short);
            core.setOutput('date', date);
            core.setOutput('compare_url', compare_url);
            core.setOutput('commit_url', commit_url);
            core.setOutput('changelog', changelog);

      # ---------- Frontend ----------
      - name: Setup Node
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: Frontend/package-lock.json

      - name: Install frontend deps
        working-directory: Frontend
        run: npm ci

      - name: Build frontend
        working-directory: Frontend
        run: npm run build

      # ---------- Rust & platform deps ----------
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Setup sccache
        uses: mozilla-actions/sccache-action@v0.0.9

      - name: Install Linux deps
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y libappindicator3-dev librsvg2-dev patchelf
          sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev

      # ---------- Cache ----------
      - name: Rust cache
        uses: Swatinem/rust-cache@v2

      # ---------- Reset rolling tag (optional but keeps things tidy) ----------
      - name: Remove existing 'openvcs-nightly' release & tag (if any)
        uses: actions/github-script@v8
        with:
          script: |
            const owner = context.repo.owner;
            const repo  = context.repo.repo;
            const tag   = 'openvcs-nightly';
            const releases = await github.paginate(github.rest.repos.listReleases, { owner, repo, per_page: 100 });
            const rel = releases.find(r => r.tag_name === tag);
            if (rel) await github.rest.repos.deleteRelease({ owner, repo, release_id: rel.id });
            try {
              await github.rest.git.deleteRef({ owner, repo, ref: `tags/${tag}` });
            } catch (e) {
              if (e.status !== 422) throw e;
            }

      # ---------- Build & publish ----------
      - name: Build and publish Nightly prerelease
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FRONTEND_SKIP_BUILD: '1'
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          projectPath: Backend
          tagName: openvcs-nightly
          releaseName: "OpenVCS Nightly ${{ steps.meta.outputs.date }} (dev@${{ steps.meta.outputs.short_sha }})"
          releaseBody: |
            Nightly build from Dev branch.
            Date (UTC): ${{ steps.meta.outputs.date }}
            Compare: ${{ steps.meta.outputs.compare_url }}
            Since: ${{ needs.check-changes.outputs.since_sha }}
            Ahead (relevant commits): ${{ needs.check-changes.outputs.ahead_count }}
            Commit: ${{ github.sha }} (dev@${{ steps.meta.outputs.short_sha }})
            Runner: ${{ runner.os }} • Run #${{ github.run_number }}

            Changes since last nightly:
            ${{ steps.meta.outputs.changelog }}
          releaseDraft: false
          prerelease: true
          args: ${{ matrix.args }}
