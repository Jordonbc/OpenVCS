name: publish

on:
  push:
    branches: [ stable ]
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-22.04
            args: ''
          - platform: windows-latest
            args: ''

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - uses: actions/setup-git-lfs@v3

      - name: Ensure LFS assets are present
        run: |
          git lfs install --local
          git lfs pull
          git lfs checkout

      # Optional: fail fast if any icon isn't a real PNG (catches LFS issues)
      - name: Validate icon PNG signatures
        shell: bash
        run: |
          if compgen -G "src-tauri/icons/*.png" > /dev/null; then
            for f in src-tauri/icons/*.png; do
              sig=$(xxd -l 8 -p "$f")
              [ "$sig" = "89504e470d0a1a0a" ] || { echo "Invalid PNG signature in $f"; exit 1; }
            done
          fi

      # ---- Cache Cargo (big speedup) ----
      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            src-tauri/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux build deps (Ubuntu)
        if: matrix.platform == 'ubuntu-22.04'
        shell: bash
        run: |
          set -euxo pipefail
          sudo apt-get update
          sudo apt-get install -y libappindicator3-dev librsvg2-dev patchelf
          # Tauri v2 prefers WebKitGTK 4.1; fall back to 4.0 if 4.1 isnâ€™t available
          sudo apt-get install -y libwebkit2gtk-4.1-dev || sudo apt-get install -y libwebkit2gtk-4.0-dev

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: 'App v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
